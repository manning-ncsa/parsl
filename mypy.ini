[mypy]
plugins = sqlmypy, parsl_mypy
enable_error_code = ignore-without-code
warn_redundant_casts = True

# globally disabled error codes:
#   str-bytes-safe warns that a byte string is formatted into a string.
#                  which is commonly done with manager IDs in the parsl
#                  codebase.
# disable_error_code = str-bytes-safe

[mypy-non_existent.*]
ignore_missing_imports = True

# some subpackages in parsl are fully typed and should be checked with much
# stricter type checking options - a longer term goal might be for all of
# parsl to be checked that way, so these options could be default instead of
# listed per package; but unless/until that happens, the more-strictly-checked
# code should be listed here:
[mypy-parsl.providers.provider_base.*]
disallow_untyped_defs = True
no_implicit_optional = True
strict_equality = True
disallow_untyped_decorators = True
warn_unused_ignores = True
check_untyped_defs = True
no_implicit_reexport = True
disallow_subclassing_any = True

# there are some exceptions to this even in the more-strongly-typed sections
warn_unreachable = True


# modules to be checked mostly more strongly than default:

[mypy-parsl.addresses.*]
disallow_untyped_defs = True
disallow_any_decorated = True

[mypy-parsl.dataflow.dflow.*]
disallow_untyped_defs = True

warn_unreachable = False
# this is because of some tangle of types
# to do with channel script dirs: script dir
# can be none at the start before initialisation,
# but must be set later on, and I can't
# represent that session type in mypy.
# (or can I?!)

[mypy-parsl.dataflow.error.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.executor_status.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.flow_control.*]
disallow_untyped_defs = True
disallow_any_decorated = True

[mypy-parsl.dataflow.futures.*]
disallow_untyped_defs = True
disallow_any_decorated = True

[mypy-parsl.dataflow.memoization.*]
disallow_untyped_defs = True

[mypy-parsl.dataflow.rundirs.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.strategy.*]
disallow_untyped_defs = True
disallow_any_decorated = True

[mypy-parsl.dataflow.states.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.taskrecord.*]
disallow_untyped_defs = True
disallow_any_expr = True
disallow_any_decorated = True

[mypy-parsl.dataflow.task_status_poller.*]
disallow_untyped_defs = True

# merge of #1877 introduced stuff that violates this so disabling pending perhaps further investigation
# disallow_any_expr = True

disallow_any_decorated = True

[mypy-parsl.config.*]
disallow_untyped_defs = True
# Any has to be allowed because TaskRecord now forms part of the type signature of config,
# and task record has Any from the type of tasks args
#disallow_any_expr = True
#disallow_any_decorated = True

[mypy-parsl.channels.base.*]
disallow_untyped_defs = True
disallow_any_expr = True

[mypy-parsl.channels.ssh.*]
disallow_untyped_defs = True

[mypy-parsl.launchers.*]
disallow_untyped_defs = True
disallow_any_decorated = True



[mypy-parsl.executors.base.*]
disallow_untyped_defs = True
disallow_any_expr = True
[mypy-parsl.serialize.*]
disallow_untyped_defs = True


# modules to be checked more weakly than default:

[mypy-parsl.executors.flux.*]
ignore_errors = True

[mypy-parsl.executors.extreme_scale.*]
ignore_errors = True


[mypy-parsl.executors.workqueue.executor.*]
check_untyped_defs = False

[mypy-parsl.executors.low_latency.*]
check_untyped_defs = False


[mypy-parsl.providers.aws.*]
check_untyped_defs = False

[mypy-parsl.providers.pbspro.pbspro.*]
check_untyped_defs = False

[mypy-parsl.providers.lsf.lsf.*]
check_untyped_defs = False

[mypy-parsl.providers.torque.torque.*]
check_untyped_defs = False

[mypy-parsl.providers.grid_engine.grid_engine.*]
check_untyped_defs = False

[mypy-parsl.providers.googlecloud.*]
check_untyped_defs = False

[mypy-parsl.providers.jetstream.*]
check_untyped_defs = False

[mypy-parsl.monitoring.db_manager.*]
check_untyped_defs = False

[mypy-parsl.utils.*]
# because of some reasoning I don't understand in mypy
# warn_unreachable = False

[mypy-parsl.executors.high_throughput.interchange.*]
check_untyped_defs = True

[mypy-parsl.monitoring.*]
no_implicit_reexport = True
disallow_untyped_defs = True

[mypy-parsl.tests.configs.local_user_opts]
ignore_missing_imports = True


# imports from elsewhere that there are no stubs for:

[mypy-flask_sqlalchemy.*]
ignore_missing_imports = True

[mypy-networkx.*]
ignore_missing_imports = True

[mypy-_pytest.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-dill.*]
ignore_missing_imports = True

[mypy-copyreg.*]
ignore_missing_imports = True

[mypy-tblib.*]
ignore_missing_imports = True

[mypy-globus_sdk.*]
ignore_missing_imports = True

[mypy-psutil.*]
ignore_missing_imports = True

[mypy-cPickle.*]
ignore_missing_imports = True

[mypy-copy_reg.*]
ignore_missing_imports = True

[mypy-ipyparallel.*]
ignore_missing_imports = True

[mypy-ipython_genutils.*]
ignore_missing_imports = True

[mypy-cmreslogging.handlers.*]
ignore_missing_imports = True

[mypy-kubernetes.*]
ignore_missing_imports = True

[mypy-azure.*]
ignore_missing_imports = True

[mypy-msrestazure.*]
ignore_missing_imports = True

[mypy-googleapiclient.*]
ignore_missing_imports = True

[mypy-boto3.*]
ignore_missing_imports = True

[mypy-botocore.*]
ignore_missing_imports = True

[mypy-zmq.*]
ignore_missing_imports = True

[mypy-work_queue.*]
ignore_missing_imports = True

[mypy-oauth_ssh.*]
ignore_missing_imports = True

[mypy-flux.*]
ignore_missing_imports = True

[mypy-setproctitle.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True
